{"version":3,"sources":["components/nav.jsx","components/header.jsx","components/footer.jsx","components/form.jsx","components/Results.jsx","components/history.jsx","App.js","index.js"],"names":["nav","to","header","className","styles","footer","props","footerClass","Form","_handleSubmit","e","formHandler","a","preventDefault","method","target","value","url","textArea","state","console","log","history","localStorage","getItem","JSON","parse","superagent","send","data","status","unshift","results","setItem","stringify","_handleTextArea","clickedRadio","includes","setState","onChangeHandler","name","body","nextProps","formValues","this","onClick","onSubmit","id","type","placeholder","defaultValue","required","onChange","checked","htmlFor","cols","rows","React","Component","src","History","_handleHistory2Form","cb","withBody","currentTarget","attributes","nodeValue","valuesObj","childNodes","forEach","element","innerText","condition","map","val","i","dataset","formValuesHandler","key","Object","keys","j","Results","App","count","resultArr","footerToggle","NaN","obj","Fragment","exact","path","undefined","pa","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d832102.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport React from 'react';\n\nconst nav = () => {\n    return (\n        <>\n            <ul>\n                <li >\n                    <NavLink to=\"/\"> Home</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/history\"> History</NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/help\"> Help</NavLink>\n                </li>\n            </ul>\n\n        </>\n    )\n};\nexport default nav;\n","\nimport styles from '../components-styles/header.scss';\nimport Nav from './nav'\nimport React from 'react';\n\nconst header = () => {\n    return (\n        <header className={styles.header}>\n            <h1>RESTy</h1>\n            <Nav />\n        </header>\n    )\n};\n\nexport default header;\n","import '../components-styles/footer.scss';\nimport React from 'react';\n\nconst footer = (props) => {\n    return (\n        <footer className={'footer-' + props.footerClass}>\n            <p>By Ahmad kheder</p>\n        </footer>\n    )\n};\n\nexport default footer;","import '../components-styles/form.scss';\nimport React from 'react';\nimport superagent from 'superagent'\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            textArea: false,\n            url: '',\n            method: '',\n            body: '',\n        }\n    }\n    componentWillReceiveProps(nextProps) {\n        // This will erase any local state updates!\n        // Do not do this.\n        console.log(nextProps)\n        let textArea = ('postput').includes(nextProps.formValues.method) ? true : false;\n        this.setState({ url: nextProps.formValues.url, method: nextProps.formValues.method, body: nextProps.formValues.body, textArea });\n    }\n    _handleSubmit = async (e, formHandler) => {\n        e.preventDefault();\n        let method = e.target.method.value;\n        let url = e.target.url.value;\n        let textArea = this.state.textArea ? e.target.textArea.value : false;\n        console.log('url ', url, ' method ', method, ' textarea', textArea)\n        let data;\n        let status;\n        let history = localStorage.getItem('history') ? JSON.parse(localStorage.getItem('history')) : [];\n        ;\n        try {\n            if (this.state.textArea) {\n                data = await superagent[method](url).send(textArea);\n                status = data.status;\n                history.unshift({ textArea, method, url, status, results: data });\n            }\n            else {\n                data = await superagent[method](url);\n                status = data.status;\n                history.unshift({ method, url, status, results: data });\n            }\n            localStorage.setItem('history', JSON.stringify(history));\n            let count = '5';\n            formHandler(count, data, true)\n        } catch (error) {\n\n            console.log('Invalid Link ', typeof (history))\n            data = 'Invalid Link '\n        }\n\n    }\n    _handleTextArea = (e) => {\n        let clickedRadio = e.target.value;\n        if (clickedRadio) {\n\n            if ((['get', 'delete']).includes(clickedRadio)) {\n                this.setState({ textArea: false });\n            }\n            else if ((['post', 'put']).includes(clickedRadio))\n                this.setState({ textArea: true });\n        }\n    }\n    onChangeHandler = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    render() {\n        return (\n            <main>\n                <div>\n                    <form onClick={this._handleTextArea} onSubmit={(e) => this._handleSubmit(e, this.props.formHandler)}>\n                        <input id=\"url\" type=\"url\" name=\"url\" placeholder=\"url\" defaultValue={this.state.url} required />\n                        <button type=\"submit\"> GO! </button>\n                        <br />\n                        <input type=\"radio\" id=\"get\" name=\"method\" value=\"get\" required onChange={e => this.onChangeHandler(e)} checked={'get' === this.state.method} />\n                        <label htmlFor=\"get\">GET</label>\n                        <input type=\"radio\" id=\"post\" name=\"method\" value=\"post\" required onChange={e => this.onChangeHandler(e)} checked={'post' === this.state.method} />\n                        <label htmlFor=\"post\">POST</label>\n                        <input type=\"radio\" id=\"put\" name=\"method\" value=\"put\" required onChange={e => this.onChangeHandler(e)} checked={'put' === this.state.method} />\n                        <label htmlFor=\"put\">PUT</label>\n                        <input type=\"radio\" id=\"delete\" name=\"method\" value=\"delete\" required onChange={e => this.onChangeHandler(e)} checked={'delete' === this.state.method} />\n                        <label htmlFor=\"delete\">DELETE</label>\n                        {this.state.textArea ? < textarea name=\"textArea\" id=\"body\" cols=\"30\" rows=\"10\" defaultValue={this.state.body ? this.state.body : ''} /> : null}\n                    </form >\n                </div>\n            </main >\n\n        )\n    }\n}\n\nexport default Form;\n","import '../components-styles/results.scss';\nimport React from 'react';\nimport ReactJson from 'react-json-view'\n\nconst results = (props) => {\n    return (\n        <div className=\"json-div\">\n            <h3>Header</h3>\n            <ReactJson src={props.results.header} />\n            <h3>Body</h3>\n            <ReactJson src={props.results.body} />\n        </div>\n    )\n};\n\nexport default results;","import React from 'react';\nimport '../components-styles/history.scss'\nimport { When } from 'react-if'\nimport Results from './Results'\nclass History extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: false,\n        };\n    }\n    _handleHistory2Form = (e, cb, withBody) => {\n        if (withBody) {\n            this.setState({ results: JSON.parse(e.currentTarget.attributes[0].nodeValue) })\n        } else {\n            let valuesObj = {};\n            e.currentTarget.childNodes.forEach(element => {\n                valuesObj[element.className] = element.innerText;\n            });\n            cb(valuesObj);\n        }\n\n\n    }\n\n    render() {\n        return (\n            <>\n                <table>\n                    <thead>\n                        <tr>\n                            <th>method</th>\n                            <th>status</th>\n                            <th> url</th>\n                            <th>body</th>\n                        </tr>\n                    </thead>\n                    <tbody >\n                        <When condition={this.props.history !== null}>\n                            {this.props.history.map((val, i) => {\n                                return <tr dataset={JSON.stringify(val.results)} onClick={(e) => this._handleHistory2Form(e, this.props.formValuesHandler, this.props.withBody)} key={i}>\n                                    {Object.keys(val).map((key, j) => {\n                                        return (key !== 'results' ? <td className={key} key={j}>{val[key]}</td> : null);\n                                    })}\n                                </tr>\n                            })}\n                        </When>\n                    </tbody>\n                </table>\n                <When condition={this.props.withBody && this.state.results}>\n                    <Results results={this.state.results} />\n                </When>\n\n            </>\n        )\n    }\n};\nexport default History;\n","\nimport React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport './components-styles/reset.scss'\nimport './components-styles/colors.scss'\nimport Header from './components/header.jsx';\nimport Footer from './components/footer.jsx';\nimport Form from './components/form.jsx';\nimport History from './components/history.jsx'\nimport Results from './components/Results'\nimport { When } from 'react-if'\n\nclass App extends React.Component {\n  // init state\n  state = {\n    count: null,\n    resultArr: null,\n    footerToggle: false,\n    history: JSON.parse(localStorage.getItem('history')),\n    formValues: { url: NaN, method: NaN, body: NaN },\n  };\n  formHandler = (count, resultArr) => {\n    this.setState({\n      count: count,\n      resultArr: resultArr,\n      footerToggle: !this.state.footerToggle,\n      history: JSON.parse(localStorage.getItem('history')),\n    });\n  }\n  formValuesHandler = obj => {\n    console.log('clicked-app')\n    this.setState({ formValues: obj });\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <BrowserRouter>\n\n          <Header />\n          <Route exact path=\"/\">\n            <Form formHandler={this.formHandler} formValues={this.state.formValues} />\n            <When condition={this.state.history !== undefined}>\n              <History formValuesHandler={this.formValuesHandler} history={this.state.history} withBody={false} />\n            </When>\n            <When condition={!!this.state.resultArr}>\n              <Results exact pa results={this.state.resultArr} />\n            </When>\n          </Route>\n          <Route exact path=\"/History\">\n            <History history={this.state.history} withBody={true} />\n          </Route>\n          <Route exact path=\"/help\">\n            <p>This is help </p>\n          </Route>\n          <Footer footerClass={this.state.footerToggle} />\n        </BrowserRouter>\n      </React.Fragment>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}